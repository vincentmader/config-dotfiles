# =============================================================================
#                                 TMUX.CONF
# =============================================================================

#                                                                   GENERAL {{{
# =============================================================================

# use zsh as default shell
set-option -g default-shell /bin/zsh

# utf8 is on
# set -g utf8 on
# set -g status-utf8 on

# don't rename windows automatically
set-option -g allow-rename off

# increase scrollback buffer size
set -g history-limit 50000

# automatically restore tmux state (TODO: make this work)
# set -g @continuum-restore 'on'
# loud or quiet?
# set-option -g visual-activity off
# set-option -g visual-bell off
# set-option -g visual-silence off
# set-window-option -g monitor-activity off
# set-window-option -g bell-action none

# }}}
#                                                                KEY REMAPS {{{
# =============================================================================

#                                                                        prefix 
# -----------------------------------------------------------------------------
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

#                                             source .tmux.conf using 'prefix r'
# -----------------------------------------------------------------------------
bind r source-file "$CONF/tmux/tmux.conf" \; display-message "Config reloaded..."

#                                     split panes using 'prefix .' & 'prefix -'
# -----------------------------------------------------------------------------
unbind '"'
unbind %
bind . split-window -h -c '#{pane_current_path}'
bind - split-window -v -c '#{pane_current_path}'

#                          easier and faster switching between next/prev window
# -----------------------------------------------------------------------------
# bind C-p previous-window
# bind C-n next-window

#                                                                       various
# -----------------------------------------------------------------------------
# enter copy mode with 'prefix esc'
# unbind [
# bind Escape copy-mode
# select and yank with v and y, reactangle-toggle with r    (not yet working)
# bind P paste-buffer
# bind-key -T copy-mode-vi v send-keys -X begin-selection
# bind-key -T copy-mode-vi y send-keys -X copy-selection
# bind-key -T copy-mode-vi r send-keys -X rectangle-toggle
# copy to system clipboard                                  (not yet working)
# bind -t vi-copy y copy-pipe "xclip -sel clip -i"

# }}}
#                                                                    VISUAL {{{
# =============================================================================

#                                                                        colors
# -----------------------------------------------------------------------------
# enable full colors
set -g default-terminal "screen-256color"

# set pane divider color
set-option -g pane-border-style fg=colour8
set-option -g pane-active-border-style fg=colour8
# set message text color
set-option -g message-style fg=colour8,bg=colour234
# set clock color (activate with "ctrl-a t")
set-window-option -g clock-mode-colour colour64  # green

# active window title
# set-window-option -g window-status-current-style fg=colour166,bg=default #orange and default
# prefix highlight color
# set -g @prefix_highlight_bg 'color112'  # default is 'colour04'
# set cpu display color
# set -g @cpu_low_fg_color "#[fg=colour64]" # background color when cpu is low
# set -g @cpu_medium_fg_color "#[fg=colour64]" # background color when cpu is medium
# set -g @cpu_high_fg_color "#[fg=colour166]" # background color when cpu is high

#                                                                    status bar
# -----------------------------------------------------------------------------
## activate status bar
#set-option -g status on
## update status bar every 10 second
# set status-interval 10

# position window list to centre
set -g status-justify centre
# position status bar on top of window
set-option -g status-position top

## things to show on left side
#set status-left-length 40
#set -g status-left ' #S'
## things to show on right side
#set status-right-length 80
#set -g status-right '#{cpu_fg_color}CPU#{cpu_percentage} #[fg=colour64] %t %t #{network_bandwidth} %t %t %t ♡ #(/Users/meister/.tmux/status_bar_scripts/battery.sh) %t %t %t %a %Y-%m-%d %H:%M '
# set -g status-right '#{network_bandwidth} %t %t %t ♡ #(/Users/meister/.tmux/status_bar_scripts/battery.sh) %t %t %t %a %Y-%m-%d %H:%M '
##set -g status-right '♡ #(/Users/meister/.tmux/status_bar_scripts/battery.sh) %t %t %t %a %Y-%m-%d %H:%M '
## cpu display in status bar
#set -g @cpu_percentage_format "%3.0f%%" # printf format to use to display percentage
# default statusbar colors
# set-option -g status-style fg=colour64,bg=colour235 #colour235

# }}}
#                                                                NAVIGATION {{{
# =============================================================================

# enable mouse control (clickable windows, panes, resizable panes)
set -g mouse on
# use vim key bindings in copy mode
# setw -g mode-keys vi

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
# bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
# bind-key -T copy-mode-vi C-\ select-pane -l

# }}}
#                                                                 RESURRECT {{{
# =============================================================================

set -g @resurrect-dir '$DROPBOX/tmux_resurrect'

# }}}
#                                                                       VIM {{{
# =============================================================================

# make vim autoread actually work (reload files changed on disk)
set -g focus-events on

# address vim mode switching delay (http://superuser.com/a/252717/65504)
# TODO: not working
# set -s escape-time 0

# }}}
#                                                      TMUX package manager {{{
# =============================================================================

# set-environment -g PATH "/usr/local/bin:/bin:/usr/bin"
#                                                               list of plugins
# -----------------------------------------------------------------------------
# set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'tmux-plugins/tmux-resurrect'
# set -g @plugin 'tmux-plugins/tmux-continuum'
# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'
# set -g @plugin 'xamut/tmux-network-bandwidth'
# set -g @plugin 'tmux-plugins/tmux-cpu'
# set -g @plugin 'tmux-plugins/tmux-sensible'

#                                                                    initialize 
# -----------------------------------------------------------------------------
# this needs to be at the bottom of tmux.conf
# run -b '$CONF/tmux/plugins/tpm/tpm'

# }}}
