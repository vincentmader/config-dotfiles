
# ╔═══════════════════════════════════════════════════════════════════════════╗
# ║                               File Headers                                ║
# ╚═══════════════════════════════════════════════════════════════════════════╝

# HASHBANG
# ═════════════════════════════════════════════════════════════════════════════
#                                                                      HashBang
snippet hashbang ""
#!/usr/bin/env python3
endsnippet
#                                                      HashBang & File Encoding
snippet hashbang_and_encoding ""
#!/usr/bin/env python3
# -*- coding: utf8 -*-
endsnippet

# ╔═══════════════════════════════════════════════════════════════════════════╗
# ║                      Imports from Standard Library                        ║
# ╚═══════════════════════════════════════════════════════════════════════════╝

# DATETIME
# ═════════════════════════════════════════════════════════════════════════════
snippet import_datetime ""
import datetime
endsnippet
snippet from_datetime_import_datetime_as_dt ""
from datetime import datetime as dt
endsnippet
snippet from_datetime_import_timedelta_as_td ""
from datetime import timedelta as td
endsnippet

# ╔═══════════════════════════════════════════════════════════════════════════╗
# ║                        Imports from Other Sources                         ║
# ╚═══════════════════════════════════════════════════════════════════════════╝

# BOKEH
# ═════════════════════════════════════════════════════════════════════════════
snippet import_bokeh ""
import bokeh
endsnippet
snippet from_bokeh.plotting_import_figure ""
from bokeh.plotting import figure
endsnippet
snippet from_bokeh.models_import_Square ""
from bokeh.models import Square
endsnippet
snippet from_bokeh.models_import_Line ""
from bokeh.models import Line
endsnippet
snippet from_bokeh.models_import_Circle ""
from bokeh.models import Circle
endsnippet
snippet from_bokeh.models_import_ColumnDataSource ""
from bokeh.models import ColumnDataSource
endsnippet
snippet from_bokeh.embed_import_components ""
from bokeh.embed import components
endsnippet

# MATPLOTLIB
# ═════════════════════════════════════════════════════════════════════════════
snippet import_matplotlib_as_mpl ""
import matplotlib as mpl
endsnippet
snippet import_matplotlib.pyplot_as_plt ""
import matplotlib.pyplot as plt
endsnippet

# NUMPY
# ═════════════════════════════════════════════════════════════════════════════
snippet import_numpy_as_np ""
import numpy as np
endsnippet

# SCIPY
# ═════════════════════════════════════════════════════════════════════════════
snippet import_scipy ""
import scipy
endsnippet

# TOML
# ═════════════════════════════════════════════════════════════════════════════
snippet import_toml ""
import toml
endsnippet

# TQDM
# ═════════════════════════════════════════════════════════════════════════════
snippet from_tqdm_import_tqdm ""
from tqdm import tqdm
endsnippet

# ╔════════════════════════════════════════════════════════════════════════════╗
# ║                         Imports from Own Modules                           ║
# ╚════════════════════════════════════════════════════════════════════════════╝

# CONFIG
# ═════════════════════════════════════════════════════════════════════════════
snippet import_config ""
import config
endsnippet
snippet from_config_import_PATH... ""
from config import PATH_$1
endsnippet

# UTILS
# ═════════════════════════════════════════════════════════════════════════════
snippet import_utils ""
import utils
endsnippet

# ╔════════════════════════════════════════════════════════════════════════════╗
# ║                                    Loops                                   ║
# ╚════════════════════════════════════════════════════════════════════════════╝

# FOR LOOPS
# ═════════════════════════════════════════════════════════════════════════════
snippet for_i_in ""
for ${1:i} in ${2:range(10)}:
    ${3:pass}
endsnippet
snippet for_i_in_range ""
for ${1:i} in range(${2:10}):
    ${3:pass}
endsnippet

# WHILE LOOPS
# ═════════════════════════════════════════════════════════════════════════════
snippet while ""
while ${1:True}:
    ${2:pass}
endsnippet

# ╔═══════════════════════════════════════════════════════════════════════════╗
# ║                            Function Definitions                           ║
# ╚═══════════════════════════════════════════════════════════════════════════╝

snippet def_f ""
def ${1:f}($2):
    ${3:pass}
endsnippet

# DEFINITION OF MAIN FUNCTION
# ═════════════════════════════════════════════════════════════════════════════
snippet def_main ""
def main():
    $1
if __name__ == "__main__":
    main()
endsnippet
snippet if__name__==__main__ ""
if __name__ == "__main__":
    main()
endsnippet

# DOC STRINGS
# ═════════════════════════════════════════════════════════════════════════════

snippet docstring_for_function ""
"""
$1

Parameters:
-----------
x: type
Description

Returns:
--------
y: type
Description

"""
endsnippet

# ╔═══════════════════════════════════════════════════════════════════════════╗
# ║                             Method Definitions                            ║
# ╚═══════════════════════════════════════════════════════════════════════════╝
#                                                      Define __init__() method
# ─────────────────────────────────────────────────────────────────────────────
snippet def_init ""
def __init__(self):
    $1
endsnippet

# ╔═══════════════════════════════════════════════════════════════════════════╗
# ║                             Class Definitions                             ║
# ╚═══════════════════════════════════════════════════════════════════════════╝
#                                                            Define a new class
# ─────────────────────────────────────────────────────────────────────────────
snippet class ""
class $1($2):
    def __init__(self):
        ${3:pass}
endsnippet

# ╔═══════════════════════════════════════════════════════════════════════════╗
# ║                            Exception Handling                             ║
# ╚═══════════════════════════════════════════════════════════════════════════╝
#                                                                    Try/Except
# ─────────────────────────────────────────────────────────────────────────────
snippet try ""
try:
    ${1:pass}
except ${2:Exception}:
    ${3:pass}
endsnippet

# ╔═══════════════════════════════════════════════════════════════════════════╗
# ║                               Matplotlib                                  ║
# ╚═══════════════════════════════════════════════════════════════════════════╝
#                                                               Figure Creation
# ─────────────────────────────────────────────────────────────────────────────
snippet plt.figure ""
plt.figure(figsize=(${1:10}, ${2:10}))
endsnippet
snippet plt.subplot ""
plt.subplot($1)
endsnippet
#                                                                      Plotting
# ─────────────────────────────────────────────────────────────────────────────
snippet plt.plot ""
plt.plot(${1:x}, ${2:y}, label=${3:""})
endsnippet
snippet plt.scatter ""
plt.scatter(${1:x}, ${2:y}, label=${3:""})
endsnippet
#                                                            Axis Configuration
# ─────────────────────────────────────────────────────────────────────────────
snippet plt.gca().ticklabel_format(style='sci') ""
plt.gca().ticklabel_format(style="sci", scilimits=(0, 0), axis='y')
endsnippet
#                                                                        Legend
# ─────────────────────────────────────────────────────────────────────────────
snippet plt.legend ""
plt.legend(loc="${1:best}")
endsnippet
#                                                                Saving to File
# ─────────────────────────────────────────────────────────────────────────────
snippet plt.savefig ""
plt.savefig("$1")
endsnippet
#                                                                   Plot Labels
# ─────────────────────────────────────────────────────────────────────────────
snippet plt.xlabel ""
plt.xlabel($1)
endsnippet
snippet plt.ylabel ""
plt.ylabel($1)
endsnippet
#                                                                   Plot Limits
# ─────────────────────────────────────────────────────────────────────────────
snippet plt.xlim ""
plt.xlim(${1:x_min}, ${2:x_max})
endsnippet
snippet plt.ylim ""
plt.ylim(${1:y_min}, ${2:y_max})
endsnippet
#                                                        Plot Tick Marks/Labels
# ─────────────────────────────────────────────────────────────────────────────
snippet plt.xticks ""
plt.xticks(${1:[]})
endsnippet
snippet plt.yticks ""
plt.yticks(${1:[]})
endsnippet

# ╔═══════════════════════════════════════════════════════════════════════════╗
# ║                                  Numpy                                    ║
# ╚═══════════════════════════════════════════════════════════════════════════╝
#                                                                      Linspace
# ─────────────────────────────────────────────────────────────────────────────
snippet np.linspace ""
np.linspace($1)
endsnippet

# ╔═══════════════════════════════════════════════════════════════════════════╗
# ║                                Debugging                                  ║
# ╚═══════════════════════════════════════════════════════════════════════════╝


# PRINTING
# ═════════════════════════════════════════════════════════════════════════════
#                                                         Print "Hello, World!"
# ─────────────────────────────────────────────────────────────────────────────
snippet print_hello_world
print("Hello, World!")
endsnippet

# ╔═══════════════════════════════════════════════════════════════════════════╗
# ║                                  FileIO                                   ║
# ╚═══════════════════════════════════════════════════════════════════════════╝

snippet with_open_path_as_fp ""
with open(${1:path_to_file}, encoding="utf-8") as fp:
    lines = fp.readlines()
endsnippet

# ╔═══════════════════════════════════════════════════════════════════════════╗
# ║                                    ...                                    ║
# ╚═══════════════════════════════════════════════════════════════════════════╝

# code readability and doc strings
snippet docstr "doc string"
"""${1:description}

Parameters:
    ${2:parameter 1}
    ${3:parameter 1}
Returns:
    ${4:return value}
endsnippet

snippet func
def ${1:funcname}(${2:arg1}$3)
"""${1:Does something}
Args:
    ${2:arg1} (${3:type}): $4

Return:
    ${5:type}. ${6:description}
"""
$0
endsnippet

snippet funcfile "structure for function in new file"

#!/usr/local/bin/python3
# -*- coding: utf8 -*-


def main($1):
    """

    Parameters
    ----------

    Returns
    --------


    """

    pass


if __name__ == '__main__':
    main()
endsnippet
