#/bin/sh
# ╔═══════════════════════════════════════════════════════════════════════════╗
# ║                         $XDG_CONFIG_HOME/zsh/aliasrc                      ║
# ╚═══════════════════════════════════════════════════════════════════════════╝
#  -> A collection of commonly used shell-command aliases.

# ╭───────────────────────────────────────────────────────────────────────────╮
# │ General                                                                   │
# ╰───────────────────────────────────────────────────────────────────────────╯

#   Power down this computer.
    alias bye="sudo shutdown now"

# ╭───────────────────────────────────────────────────────────────────────────╮
# │ Shell                                                                     │
# ╰───────────────────────────────────────────────────────────────────────────╯

#   Source zsh configuration.
    alias sozsh="source \"$XDG_CONFIG_HOME/zsh/zshrc\""

# ╭───────────────────────────────────────────────────────────────────────────╮
# │ Directory listing                                                         │
# ╰───────────────────────────────────────────────────────────────────────────╯

#   Re-define `pwd` command to print actual path without symbolic links.
    alias pwd="pwd -P"

#   Define shorter `clear` command.
    alias c="clear"

#   Basic setup of `exa`
#   ───────────────────────────────────────────────────────────────────────────

#   Define default exa flags.
#   1. Show icons.
#   2. Group directories first.
    EXA_FLAGS="--icons --group-directories-first"

#   Re-define `exa` command for prettier displaying.
#   - Clear screen before showing listing.
#   - Add an empty line, then print the present working directory.
#   - Add another empty line,
#   - Tell `exa` to use the flags defined above, & finally show the listing. 
    alias exa="clear && pwd && echo && exa $EXA_FLAGS"

#   Define list of filenames to ignore in listing.
#   - NOTE: Be careful to remember the escape-symbols at the end of the line.
    EXA_IGNORE="\
        |nvim|\
        |.DS_Store|.CFUserTextEncoding|.ssh|.git|.gitignore|.git-credentials|\
        |.archey-ip|__pycache__|*.pyc|*.pyo|venv|env|node_modules|Cargo.lock|\
        |target|pkg|.viminfo|.ob-jupyter|.ipynb_checkpoints|.dart|\
        |.dartServer|.flutter-devtools|.pub-cache|.terminfo|.flutter|.cups|\
        |.gem|.mono|.putty|.swiftpm|.thumbnails|.docker"

#   Re-define `ls` command to ignore the just-defined list of files...
    alias ls="exa -a -I \"$EXA_IGNORE\""
#   ...except if running `lsa`.
    alias lsa="exa -a"
 
#   Show in a prettier way via 1-level-deep tree-view.            (-T = --tree)
    alias l="ls -T --level=1"
    alias la="lsa -T --level=1"

#   Show more-detailed directory listing using `exa`
#   ───────────────────────────────────────────────────────────────────────────
  
#   Display longer list view.                                     (-l = --long)
    alias ll="ls -l --header --git"
    alias lla="lsa -l --header --git"

#   Show nested tree-view using `exa`.
#   ───────────────────────────────────────────────────────────────────────────
  
#   Show multi-level tree view.                                   (-T = --tree)
    alias lt="exa -T $EXA_FLAGS -I \"$EXA_IGNORE\""
    alias lta="exa -T $EXA_FLAGS"
    MORE_EXA_IGNORE="$EXA_IGNORE|Cargo.toml|lib.rs|mod.rs|scripts|css|img"
    alias ltt="exa -T $EXA_FLAGS -I \"$MORE_EXA_IGNORE\""
    alias ltta="exa -T $EXA_FLAGS"
    alias lt1="lt -L 1"
    alias lt2="lt -L 2"
    alias lt3="lt -L 3"
    alias lt4="lt -L 4"
    alias lt5="lt -L 5"
    alias ltt1="ltt -L 1"
    alias ltt2="ltt -L 2"
    alias ltt3="ltt -L 3"
    alias ltt5="ltt -L 5"
    alias ltt4="ltt -L 4"
   
# ╭───────────────────────────────────────────────────────────────────────────╮
# │ Directory navigation                                                      │
# ╰───────────────────────────────────────────────────────────────────────────╯

#   Re-define `cd` command to automatically move list the target's contents.
#   -> NOTE: needs to be defined AFTER above `exa` binds to `l`
    function cd() {  
        # builtin cd "$@" && l
        z "$@" && l
    }

#   Re-define `cd ..` command(s).
#   TODO Decide re: Use history of `zoxide` instead?
    alias cd..='cd ..'
    alias ..='cd ..'
    alias ...='cd ../..'
    alias ....='cd ../../..'

#   FuzzyFind
#   ───────────────────────────────────────────────────────────────────────────

    alias fzf="fzf --preview 'bat --style=numbers --color=always --line-range :500 {}'"
  # alias fzf="fzf --preview='head -$LINES {}'"

  # alias fe="fzf --exact"
  # alias fv="v $(fzf --height 40%)"
  # alias fo="open $(fzf)"
  # function find() {
  #     if [ $# = 1 ];
  #     then
  #         command find . -iname "*$@*"
  #     else
  #         command find "$@"
  #     fi
  # }
  # alias vf="v $(fzf)"  # TODO: ? -> fix

# ╭───────────────────────────────────────────────────────────────────────────╮
# │ Directory hierarchy editing                                               │
# ╰───────────────────────────────────────────────────────────────────────────╯

#   Define shorter `touch` command.
    alias t="touch"

#   Re-define `mkdir` / `md` commands to automatically move into target.
    function func_mkcdir() {
        command mkdir -pv "$1";
        cd "$1";
    }
    alias md=func_mkcdir
    alias mkdir=func_mkcdir

#   Re-define `mv` command to ask before overwriting an existing file.
    alias mv="mv -i"

#   Re-define `cp` command to 
#   - always act recursively,
#   - ask before overwriting an existing file, &
#   - show verbose output.
    alias cp="cp -riv"

#   Make symbolic link creation more verbose.
    alias ln="ln -v"

#   Re-map `del` command to recursive `rmtrash`.
  # alias del="rmtrash -r"                                           (unused)
  # alias rm="echo \"'rm' has been deactivated. use 'del' instead!\""

# ╭───────────────────────────────────────────────────────────────────────────╮
# │ Text Editor: Vim/Neovim                                                   │
# ╰───────────────────────────────────────────────────────────────────────────╯

#   Make vim use the configuration file `$XDG_CONFIG_HOME/vim/vimrc`.
  # alias vim="vim -u $XDG_CONFIG_HOME/vim/vimrc"

#   Make nvim use the configuration file `$NVIMRC`.
  # alias nvim="nvim -u $NVIMRC"

#   Make nvim NOT use a shared data file.
  # alias nvim="nvim -i NONE"  # -> not working

#   Make nvim either...
#   1. ...load a file (or multiple), 
#         if specified via e.g. `nvim file_1 file_2`.
#   2. ...load the file listing for the current directory, 
#         if no file is specified, such that `nvim` behaves like `nvim ./`.
#
#   NOTE: Inactive at the moment, instead auto-start fuzzy-find on start-up.
#         ^ false, now it's active again
#
  function nvim_func {
      if [ "$#" -eq 0 ]; then
          # nvim ./
          nvim +FZF
      else
          nvim $@
      fi
  }
  alias nvim="nvim_func"

#   Define shorter `nvim` commands.
    alias v="nvim"
  # alias vi="nvim"

# ╭───────────────────────────────────────────────────────────────────────────╮
# │ Version Control using Git                                                 │
# ╰───────────────────────────────────────────────────────────────────────────╯

#   Define shorter `git` command -> mapped to `g`
    alias g="git"

#   Define shorter `git status` command(s).
    alias gg='clear && git status'
    alias ggs='clear && git status --short'
    
#   Define shorter `git clone` command.
    alias gcl="git clone -j8"

#   Define shorter commands for branch creation & checkout.
    alias gch="git checkout"
    alias gbr="git branch"

#   Define shorter `git pull` command.
    alias gl="git pull -j8"

#   Define shorter `git add` & `git remove` commands.
    alias ga="git add"
    alias grm="git rm"

#   Define shorter `git commit` command.
    alias gc="git commit"

#   Define shorter `git push` command.
    alias gp="git push --recurse-submodules=on-demand"

# ╭───────────────────────────────────────────────────────────────────────────╮
# │ Brew (on macOS)                                                           │
# ╰───────────────────────────────────────────────────────────────────────────╯
#   NOTE: Shortcuts are inactive at the moment.

    if [[ "$OSTYPE" == "darwin"* ]]; then
        :  # Do nothing.

        # alias bs="brew search"
        # alias bt="brew tap"
        # alias bi="brew install"
        # alias bci="brew install --cask"  
        # alias bu="brew uninstall"
        # alias buu="brew update && brew upgrade"
    fi

# ╭───────────────────────────────────────────────────────────────────────────╮
# │ PacMan & Yay (on Arch Linux)                                              │
# ╰───────────────────────────────────────────────────────────────────────────╯
#   NOTE: Shortcuts are inactive at the moment.

    if [[ "$OSTYPE" == "linux"* ]]; then
        : # Do nothing
    fi

# ╭───────────────────────────────────────────────────────────────────────────╮
# │ Rust & Cargo                                                              │
# ╰───────────────────────────────────────────────────────────────────────────╯

#   Re-define shorter cargo commands.
    alias cgn="clear && cargo new"
    alias cgr="clear && cargo run"
    alias cgd="clear && cargo doc"
    alias cgb="clear && cargo build"
    alias cgc="clear && cargo check"
    alias cgt="clear && cargo test"
    alias cgi="clear && cargo install"

# ╭───────────────────────────────────────────────────────────────────────────╮
# │ Python & PIP                                                              │
# ╰───────────────────────────────────────────────────────────────────────────╯

#   Make sure that Python version 3.x is used. Don't use version 2.x.
    alias python="python3"
    alias pip="pip3"

#   Define a shorter command for starting the Python interpreter.
    alias py3="python"
    alias py="py3"

#   Define a shorter command for using the Python package installer.
    alias pipi="pip install"

#   Define a shorter command for starting Jupyter Notebooks.
    alias jn="jupyter notebook"

# ╭───────────────────────────────────────────────────────────────────────────╮
# │ NodeJS & NPM                                                              │
# ╰───────────────────────────────────────────────────────────────────────────╯

#   Define a shorter command for installing NodeJS packages via NPM.
    alias npmi="npm install"

#   Define a shorter command for updating NPM packages.
    alias npmu="npm install npm@latest -g"

#   Define a shorter command for running NPM builds.
    alias npmrb="npm run build"

#   Define a shorter command for creating a new React web-app using NPX.
  # alias npxcra="npx create-react-app"                            # (inactive)

# ╭───────────────────────────────────────────────────────────────────────────╮
# │ Web-Scrapers                                                              │
# ╰───────────────────────────────────────────────────────────────────────────╯

#   Re-define `wget` command to use custom history-file.
    alias wget="wget --hsts-file \"$XDG_CACHE_HOME/wget/wget-hsts\""

#   Define shorter `web_search` command.
#   NOTE: See `../zsh/zprofile` for search-engine definitions.
    alias web="web_search"
#   TODO Think re: Create a separate `zsh_aliasrc`?

#   Define shortcut to youtube scraper.
    alias ytdl="youtube-dl"
  # alias ytdl="yes | pytube3 $1 -a -f -t='$XDG_CONFIG_HOME/symlinks/dl'"

#   Define shortcut to instagram scraper.
    alias instadl="instaloader\
        --stories\
        --highlights\
        --igtv\
        --no-captions\
        --login vincent.mader"

# ╭───────────────────────────────────────────────────────────────────────────╮
# │ Browser: QuteBrowser                                                      │
# ╰───────────────────────────────────────────────────────────────────────────╯

#   Increase browser performance.
    alias qutebrowser="qutebrowser\
        --qt-flag ignore-gpu-blacklist\
        --qt-flag enable-gpu-rasterization\
        --qt-flag enable-native-gpu-memory-buffers\
        --qt-flag num-raster-threads=4"

# ╭───────────────────────────────────────────────────────────────────────────╮
# │ Rust alternatives to commonly used CLI tools                              │
# ╰───────────────────────────────────────────────────────────────────────────╯
#   NOTE: See also `exa`, `zoxide`, & `sd`.

  # RIP grep.
    alias grep="rg"

  # Concatenate: cat -> bat
    alias cat="bat"
    alias lc='lolcat'

  # Find.
    alias find="fd"

# ╭───────────────────────────────────────────────────────────────────────────╮
# │ Disk utilities                                                    │
# ╰───────────────────────────────────────────────────────────────────────────╯

    if [[ "$OSTYPE" == "darwin"* ]]; then

#       Configure macOS `diskutil` command to clear screen before printing.
        alias diskutil="clear && diskutil"

    elif [[ "$OSTYPE" == "linux"* ]]; then

#       Configure Linux' `fdisk` command to clear screen before printing.
        alias fdisk="clear && fdisk"

    fi

# ╭───────────────────────────────────────────────────────────────────────────╮
# │ Other useful CLI tools                                                    │
# ╰───────────────────────────────────────────────────────────────────────────╯

#   Define shorter command for `ranger`.
    alias r="ranger"
#   TODO: Decide re: Switch to `lf` or `nnn` instead?

#   Activate color-support for `gotop` activity-monitor.
    alias gotop="gotop --color=monokai"

#   Use `colordiff` instead of default `diff` command -> color-support.
    alias diff='colordiff'  
#   TODO: Decide re: Use `diff --color=auto` instead? -> Uninstall `colordiff`.

#   Define function/command to turn .gif file into video.
    function gif2vid {
        local in="$1"
        local out="$2"
        ffmpeg -i $in -movflags faststart -pix_fmt yuv420p -vf "scale=trunc(iw/2)*2:trunc(ih/2)*2" $out
    }

# ╭───────────────────────────────────────────────────────────────────────────╮
# │ Other fun stuff                                                           │
# ╰───────────────────────────────────────────────────────────────────────────╯

#   Make `archey` & `neofetch` clear the screen before printing.
    alias archey='clear && archey'
    alias neofetch="clear && neofetch"

#   Show a zoomable world-map in the terminal. (very impressive!)
    alias map="telnet mapscii.me"  # install telnetutils for this

#   Watch StarWars in the terminal.
    alias starwars="telnet towel.blinkenlights.nl"

#   Configure `lolcat` to also animate colors, & clear screen before printing.
    alias lolcat='clear && lolcat -a'

#   Become a real hackerman.
    alias cmx="cmatrix -b"

#   Get life-advice from fortune-cow.
    alias fortunecow='fortune -s | cowsay'

#   Show themes.
    alias gogh='bash -c "$(curl -sLo- https://git.io/vQgMr)"'

# Inspirations
# - cowsay
# - cowthink
# - figlet
# - fortune
# - fuck
# - geoiplookup
# - links
# - rtv
# - sc-im
# - sl
# - tldr
# - toilet
# - tree
# - watch
# - wifi-password

# ╔═══════════════════════════════════════════════════════════════════════════╗
# ║                                                                           ║
# ║ NOTE on things below: Very unsorted, needs clean-up!!!                    ║
# ║                                                                           ║
# ╚═══════════════════════════════════════════════════════════════════════════╝

    alias dcup="docker compose up"

    if [[ "$OSTYPE" == "darwin"* ]]; then

#       Define shorter `open` command.
        alias o="open"
        alias o.="open ."

#       Define global search command, similar to macOS' Spotlight.
        alias spot="mdfind -name"

#       Various
      # alias carla="sh $HOME/Documents/critical_driving_scenarios/project/carla/CarlaUE4.sh -opengl3 -quality-level=Low"
      # alias lock='/System/Library/CoreServices/"Menu Extras"/User.menu/Contents/Resources/CGSession -suspend'

    elif [[ "$OSTYPE" == "linux"* ]]; then

#       Source xorg key mappings.         
        alias xbindkeys="xbindkeys -f $XDG_CONFIG_HOME/x/xbindkeysrc"  

#       Define shortcut for restarting `dwm` (suckless dynamic window manager).
        alias dwmr="sudo killall dwm && startx"
      # alias dwms="sudo killall xfwm4 && dwm"

#       Various
        alias zzz="sleep 1; xset dpms force off"
        alias ip="ip -color=auto"
        alias iwctl="clear && iwctl"
        alias fehf='feh --full-screen'

      # alias smidwmr="cd $XDG_CONFIG_HOME/dwm && sudo make install && killall dwm && dwm"
      # alias smist="cd $XDG_CONFIG_HOME/st && sudo make install"
      # alias yayus="yay --mflags --skipinteg"        # unsafe yay
      # alias smi="sudo make install"
      # alias smci="sudo make clean install"
      # alias wifi="iwctl station wlan0 disconnect; iwctl station wlan0 get-networks; iwctl station wlan0 connect Pingeling"

    fi

  # alias pdfl="pdflatex"
  # alias speedtest="speedtest-cli"
  # alias top="gotop" 
  # alias wifi="iwctl station wlan0 disconnect; iwctl station wlan0 get-networks; iwctl station wlan0 connect o2-WLAN79"

# server
# -----------------------------------------------------------------------------

  # alias xssh="ssh vinc@188.166.164.214"
  # alias wssh="ssh root@164.90.234.99"
  # alias xrun="sh $CODE/mader.xyz/scripts/run"
  # alias mdbx="mongod --dbpath=$CODE/mader.xyz/database"
  # alias runx="cd $CODE/mader.xyz; flask run& mdbx"

# web-dev
# -----------------------------------------------------------------------------

  # alias mdb="mongod"
  # alias sov="source ./venv/bin/activate"
  # npm config set ignore-scripts true
  # alias esl="./node_modules/.bin/eslint"

# tierarzt
# -----------------------------------------------------------------------------

  # alias tierarzt="sudo python3 '$XDG_CONFIG_HOME/symlinks/ta/main.py'"
  # alias ta="tierarzt"

# copy / paste
# -----------------------------------------------------------------------------
    # copy(){
    #     test -z $1 && echo "No file input!" && return
    #     test ! -e $1 && echo "File not exist!" && return
    #     export orig_path="$PWD/$1"
    #     export orig_name="$1"
    # }
    # paste(){
        # test -z $orig_path && echo "No copied file!" && return
        # if [ "$#" -lt 1 ];then
        #     dist_name="$PWD/$orig_name"
        #     if [ -d $orig_path ];then
        #         cp -r $orig_path $dist_name
        #     else
        #         cp $orig_path $dist_name
        #     fi
        #     echo "$orig_name pasted."
        # else
        #     dist_name="$PWD/$1"
        #     if [ -d $orig_path ];then
        #         cp -r $orig_path $dist_name
        #     else
        #         cp $orig_path $dist_name
        #     fi
        #     echo "\"$1\" pasted."
        # fi
    # }

# taskwarrior / timewarrior
# -----------------------------------------------------------------------------
    # alias t="clear && task"
    # alias tn="t next limit:30"
    # alias ts="t short"
    # # tp () {t project:$1}
    # alias tt="t +ACTIVE or +OVERDUE or due:today or scheduled:today"
    # # alias tw="t due:today"
    # alias tbd="t burndown.daily"
    # alias tbw="t burndown.weekly"
    # alias tbm="t burndown.monthly"
    # alias tc="t calendar"
    # alias tl="t list"
    # alias ttbd=''
    # alias ttbw=''
    # alias ttbm=''
    # alias ttc=''
    # alias td='t due:today'
    # alias tm='t due:tomorrow'
    # #                                                             add item to inbox
    # alias in='t add +in'
    # #                                                      add item to grocery list
    # alias gro='t add +groceries'
    # #                                                    add deferred item to inbox
    # # tickle () {  #                                 usage e.g.: tick monday do stuff
    # #     deadline=$1
    # #     shift
    # #     in +tickle wait:$deadline $@
    # # }
    # # alias tick=tickle
    # # #                                  add item to inbox that I need to think about 
    # # alias think='tickle +1d'  
    # #                                                                   timewarrior
    # # alias tw='clear && timew'
    # # alias twd='tw day'
    # alias tww='clear && timew week'

# other
# -----------------------------------------------------------------------------

    # configure colors
    # export LESS_TERMCAP_mb=$'\e[1;32m'
    # export LESS_TERMCAP_md=$'\e[1;32m'
    # export LESS_TERMCAP_me=$'\e[0m'
    # export LESS_TERMCAP_se=$'\e[0m'
    # export LESS_TERMCAP_so=$'\e[01;33m'
    # export LESS_TERMCAP_ue=$'\e[0m'
    # export LESS_TERMCAP_us=$'\e[1;4;31m'
    
    # alias mount="mount |column -t"  # mount in human readable format
    # alias h="history"
    # alias path="echo -e ${PATH//:/\\n}"
    # alias ag='ag --path-to-ignore ~/.ignore'
    
    # redefine ls commands for more displayed information
    # alias ls='ls $LS_OPTIONS -ahFG'
    # alias l='clear && ls $LS_OPTIONS -lAhFG'
    
    # alias mpil="ssh -Y mader@bachelor-login"
    # alias mpiv="ssh -Y mader@bachelor-vis"
    
    # alias ccust="python3 ~/Documents/chronos-web/flask_backend/py/custom.py"
    # alias cmain="python3 ~/Documents/chronos-web/flask_backend/py/main.py"
    
    # alias emacs="emacs -u $XDG_CONFIG_HOME/emacs"
    # alias emacs="env HOME=/home/vinc/.config/ emacs"
    # alias emacs='emacs -q --load "/home/vinc/.config/emacs/init.el"'
    # ^ doesn't work :(
    
    # save pwd to file
    # function savepwd_cd {
    #     rm $XDG_CONFIG_HOME/zsh/pwd
    #     cd $1
    #     pwd > $XDG_CONFIG_HOME/zsh/pwd
    # }
    # alias cd='savepwd_cd'
    
    # function start_minecraft_server {
    #     local server="$1"
    #     java -Xmx1024M -Xms1024M -jar $server nogui
    # }
